{{- if eq .Values.global.componentsEnable.frontend "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: {{ include "kubecube.namespace" . }}
  labels:
    kubecube.io/app: frontend
spec:
  selector:
    matchLabels:
      kubecube.io/app: frontend
  replicas: {{ .Values.frontend.replicas }}
  template:
    metadata:
      labels:
        kubecube.io/app: frontend
    spec:
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations}}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: nginx
          image: "{{ .Values.global.hub.registry }}/{{ .Values.global.hub.project }}/{{ .Values.global.images.frontend }}"
          imagePullPolicy: IfNotPresent
          resources:
          {{- toYaml .Values.frontend.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx","-s","quit"]
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 5
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
---
{{- end }}