apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: kubecube-system
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        upstream cube {
            # hello is the internal DNS name used by the backend Service inside Kubernetes
            server kubecube;
        }

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        server {
            listen      80;
            listen [::]:80;
            server_name localhost;

            error_page   500 502 503 504  /50x.html;
            location ^~ /public/ {
                root    /usr/share/nginx/html;
                expires 30d;
            }

            location ~* \.(gif|jpg|jpeg|png|css|js|ico|svg)$ {
                root /usr/share/nginx/html/public;
            }

            location ^~ /api/v1/cube/ {
                proxy_pass https://cube;
                proxy_cookie_domain localhost kubecube;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-nodeport
  namespace: kubecube-system
spec:
  type: NodePort
  selector:
    kubecube.io/app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: kubecube-system
  labels:
    kubecube.io/app: frontend
spec:
  selector:
    matchLabels:
      kubecube.io/app: frontend
  replicas: 1
  template:
    metadata:
      labels:
        kubecube.io/app: frontend
    spec:
      containers:
        - name: nginx
          image: hub.c.163.com/kubecube/frontend:0.0.1-deploy
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx","-s","quit"]
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
